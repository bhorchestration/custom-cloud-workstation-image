# Overview: Cloud Build build pipeline using git tag.
steps:

  - id: build
    name: gcr.io/cloud-builders/docker
    entrypoint: /bin/bash
    args:
    - -c
    - |-
      docker image build \
        --platform linux/amd64 \
        -t "${LOCATION}-docker.pkg.dev/${PROJECT_ID}/${_REPO}/ws-go-code:${COMMIT_SHA}" \
        -t "${LOCATION}-docker.pkg.dev/${PROJECT_ID}/${_REPO}/ws-go-code:${TAG_NAME}" \
        .
      docker image push --all-tags "${LOCATION}-docker.pkg.dev/${PROJECT_ID}/${_REPO}/ws-go-code"
      docker image inspect "${LOCATION}-docker.pkg.dev/${PROJECT_ID}/${_REPO}/ws-go-code:${TAG_NAME}" \
        --format '{{index .RepoDigests 0}}' > ./digest.txt
      cat ./digest.txt

  - id: deploy
    waitFor:
    - build
    name: gcr.io/google.com/cloudsdktool/cloud-sdk
    entrypoint: /bin/bash
    args:
    - -c
    - |-
      has_config=$(gcloud beta workstations configs list \
        --project=$PROJECT_ID \
        --region=$LOCATION \
        --cluster=${_CLUSTER} \
        --filter="name:${_CONFIG}" \
        --format='value(NAME)')
      echo "Updating config: $has_config with $(cat ./digest.txt)"
      if [ $has_config == "${_CONFIG}" ]; then
        gcloud beta workstations configs update ${_CONFIG} \
            --project=$PROJECT_ID \
            --region=$LOCATION \
            --cluster=${_CLUSTER} \
            --container-custom-image=$(cat ./digest.txt)
      fi
      
images:
- ${LOCATION}-docker.pkg.dev/$PROJECT_ID/$_REPO/ws-go-code:$TAG_NAME

options:
  # Verify generation of attestations and provenance metadata for this build.
  # Otherwise, GCB generates provenance for global builds only.
  requestedVerifyOption: VERIFIED
